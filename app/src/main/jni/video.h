#define VIDEO "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>视频</title>\r\n    \r\n    \r\n<style>\r\nbutton {\r\n    padding: 0;\r\n    border: none;\r\n    outline: none;\r\n    font: inherit;\r\n    text-transform: inherit;\r\n    color: inherit;\r\n    background: transparent\r\n}\r\n\r\nhtml {\r\n    color: #0f0f0f;\r\n    background-color: #fff;\r\n    font-size: 10px;\r\n    font-family: Roboto, Arial, sans-serif\r\n}\r\n\r\nbody {\r\n    margin: 0;\r\n    padding: 0;\r\n    padding: 0 env(safe-area-inset-right) env(safe-area-inset-bottom) env(safe-area-inset-left);\r\n    font-size: 1.2rem;\r\n    overflow-x: hidden\r\n}\r\n\r\nheader {\r\n    height: 48px\r\n}\r\n\r\n* {\r\n    -ms-flex: 0 1 auto\r\n}\r\n\r\n\r\nhtml {\r\n    word-wrap: break-word;\r\n    color: #0f0f0f;\r\n    background-color: #fff;\r\n    -webkit-text-size-adjust: 100%\r\n}\r\n\r\ninput,\r\ntextarea {\r\n    background-color: transparent;\r\n    padding-bottom: 4px;\r\n    outline: none;\r\n    box-sizing: border-box;\r\n    border: none;\r\n    border-radius: 0;\r\n    margin-bottom: 1px;\r\n    font: inherit;\r\n    color: #0f0f0f\r\n}\r\n\r\ninput::-webkit-input-placeholder,\r\ntextarea::-webkit-input-placeholder {\r\n    color: #606060;\r\n    opacity: 1\r\n}\r\n\r\ninput::placeholder,\r\ntextarea::placeholder {\r\n    color: #606060;\r\n    opacity: 1\r\n}\r\n\r\ntextarea {\r\n    -webkit-appearance: none;\r\n    appearance: none;\r\n    min-height: 8.4rem;\r\n    width: 100%;\r\n    border: 1px solid rgba(0, 0, 0, 0.1);\r\n    padding: 8px\r\n}\r\n\r\ninput {\r\n    border-bottom: 1px solid #737373;\r\n    text-overflow: ellipsis\r\n}\r\n\r\ninput:focus {\r\n    margin-bottom: 0;\r\n    border-bottom-width: 2px;\r\n    border-bottom-color: #0f0f0f\r\n}\r\n\r\nform {\r\n    margin: 0\r\n}\r\n\r\na {\r\n    color: currentColor;\r\n    text-decoration: none\r\n}\r\n\r\nstrong,\r\nb {\r\n    font-weight: 500\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\nh4 {\r\n    margin: 0 0 3px\r\n}\r\n\r\nh2 {\r\n    font-size: 1.8rem\r\n}\r\n\r\nh3 {\r\n    font-size: 1.4rem\r\n}\r\n\r\nh4 {\r\n    font-size: 1.3rem\r\n}\r\n\r\nimg {\r\n    min-width: 1px;\r\n    min-height: 1px;\r\n    -webkit-filter: none;\r\n    filter: none\r\n}\r\n\r\n:focus {\r\n    outline: none\r\n}\r\n\r\np {\r\n    margin: 8px 0;\r\n    line-height: 1.25\r\n}</style><style>html,\r\nbody {\r\n    height: 100%;\r\n}\r\n\r\nbody {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: #000;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n\r\nvideo {\r\n    position: fixed;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n}</style></head>\r\n\r\n<body>\r\n    <div></div>\r\n    <div bind=\"middleWrapper\" style=\"z-index: 1;\">\r\n        <div bind=\"play\" @click=\"onPlay\" style=\"height: 56px;width: 56px;margin: 0 60px;color: #fff;fill: currentColor;\">\r\n            <svg style=\"width:100%;height:100%\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 24 24\">\r\n\r\n                <path d=\"M6,4l12,8L6,20V4z\"></path>\r\n\r\n            </svg>\r\n        </div>\r\n    </div>\r\n    <div bind=\"bottomWrapper\" style=\"z-index: 1;box-sizing: border-box;padding: 0 12px;width: 100%;\">\r\n        <div bind=\"progress\" @click=\"onProgress\" style=\"position: relative;width: 100%;height: 48px;\">\r\n            <div style=\"font-size: 12px;font-weight: 500;color: #fff;position: absolute;top: -14px;\">\r\n                <span bind=\"timeStart\">0:00</span>\r\n                <span style=\"margin: 0 4px;color: rgba(255, 255, 255, .7);\">/</span>\r\n                <span bind=\"timeEnd\" style=\"color: rgba(255, 255, 255, .7);\">0:00</span>\r\n            </div>\r\n            <div style=\"height: 3px;background: rgba(255, 255, 255, .3);position: absolute;top: 50%; transform: translateY(-50%);left: 0;right: 0;\">\r\n            </div>\r\n            <div bind=\"loaded\" style=\"height: 3px;background: rgba(255, 255, 255, .6);position: absolute;top: 50%; transform: translateY(-50%);\">\r\n            </div>\r\n            <div bind=\"played\" style=\"height: 3px;background: #f00;position: absolute;top: 50%; transform: translateY(-50%);\">\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    <video bind=\"video\" @abort=\"onAbortHanlder\" @canplay=\"onCanplayHanlder\" @canplaythrough=\"onCanplaythroughHanlder\" @durationchange=\"onDurationchangeHanlder\" @emptied=\"onEmptiedHanlder\" @ended=\"onEndedHanlder\" @error=\"onErrorHanlder\" @loadeddata=\"onLoadeddataHanlder\" @loadedmetadata=\"onLoadedmetadataHanlder\" @loadstart=\"onLoadstartHanlder\" @pause=\"onPauseHanlder\" @play=\"onPlayHanlder\" @playing=\"onPlayingHanlder\" @progress=\"onProgressHanlder\" @ratechange=\"onRatechangeHanlder\" @resize=\"onResizeHanlder\" @seeked=\"onSeekedHanlder\" @seeking=\"onSeekingHanlder\" @stalled=\"onStalledHanlder\" @suspend=\"onSuspendHanlder\" @timeupdate=\"onTimeupdateHanlder\" @volumechange=\"onVolumechangeHanlder\" @waiting=\"onWaitingHanlder\"></video>\r\n    \r\n\r\n<script>document.querySelectorAll('[bind]').forEach(element => {\r\n    if (element.getAttribute('bind')) {\r\n        window[element.getAttribute('bind')] = element;\r\n    }\r\n    [...element.attributes].filter(attr => attr.nodeName.startsWith('@')).forEach(attr => {\r\n        if (!attr.value) return;\r\n        element.addEventListener(attr.nodeName.slice(1), evt => {\r\n            window[attr.value](evt);\r\n        });\r\n    });\r\n})\r\n\r\nvideo.src = new URL(window.location).searchParams.get(\"q\") || 'https://vid-cf.xvideos-cdn.com/11e500089c35ed421a6787a69000ad250f1b15c1-1673759910/videos/mp4/3/c/e/xvideos.com_3ce888f2c1ba95b001cb0a617ea184b0-2.mp4';\r\nlet d = new URL(window.location).searchParams.get(\"d\");\r\nif(d){\r\n    video.currentTime=durationToSeconds(d);\r\n}\r\nlet timer, showing = true, progressRect = progress.getBoundingClientRect();\r\n\r\nfunction resize() {\r\n    const ratio = Math.max(video.videoWidth / window.innerWidth, video.videoHeight / window.innerHeight);\r\n    const width = video.videoWidth / ratio;\r\n    const height = video.videoHeight / ratio;\r\n    video.style.width = (width + 'px');\r\n    video.style.height = (height + 'px');\r\n    video.style.top = (((window.innerHeight - height) >> 1) + 'px')\r\n}\r\nfunction formatDuration(ms) {\r\n    if (isNaN(ms)) return '0:00';\r\n    if (ms < 0) ms = -ms;\r\n    const time = {\r\n        hour: Math.floor(ms / 3600) % 24,\r\n        minute: Math.floor(ms / 60) % 60,\r\n        second: Math.floor(ms) % 60,\r\n    };\r\n    return Object.entries(time)\r\n        .filter((val, index) => index || val[1])\r\n        .map(val => (val[1] + '').padStart(2, '0'))\r\n        .join(':');\r\n}\r\nfunction durationToSeconds(duration) {\r\n    let result = 0;\r\n    if (/(\\\\d{1,2}:){1,2}\\\\d{1,2}/.test(duration)) {\r\n        const pieces = duration.split(':');\r\n        for (let i = pieces.length - 1; i > -1; i--) {\r\n            result += Math.pow(60, i) * parseInt(pieces[pieces.length - i - 1]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction updateProgress() {\r\n    if (showing) {\r\n        played.style.width = (video.currentTime / video.duration * 100) + '%';\r\n        timeStart.textContent = formatDuration(video.currentTime);\r\n    }\r\n}\r\nfunction onAbortHanlder() {\r\n    console.log(\"abort\", `video.videoWidth = ${video.videoWidth}`, `video.videoHeight = ${video.videoHeight}`);\r\n\r\n}\r\nfunction onCanplayHanlder() {\r\n    console.log(\"canplay\", `video.videoWidth = ${video.videoWidth}`, `video.videoHeight = ${video.videoHeight}`);\r\n\r\n}\r\nfunction onCanplaythroughHanlder() {\r\n    console.log(\"canplaythrough\", `video.videoWidth = ${video.videoWidth}`, `video.videoHeight = ${video.videoHeight}`);\r\n\r\n}\r\nfunction onDurationchangeHanlder() {\r\n    console.log(\"durationchange\", `video.videoWidth = ${video.videoWidth}`, `video.videoHeight = ${video.videoHeight}`);\r\n    resize();\r\n    timeEnd.textContent = formatDuration(video.duration);\r\n}\r\nfunction onEmptiedHanlder() {\r\n    console.log(\"emptied\", `video.videoWidth = ${video.videoWidth}`, `video.videoHeight = ${video.videoHeight}`);\r\n\r\n}\r\nfunction onEndedHanlder() {\r\n    console.log(\"ended\", `video.videoWidth = ${video.videoWidth}`, `video.videoHeight = ${video.videoHeight}`);\r\n\r\n}\r\nfunction onErrorHanlder() {\r\n    console.log(\"error\", `video.videoWidth = ${video.videoWidth}`, `video.videoHeight = ${video.videoHeight}`);\r\n\r\n}\r\nfunction onLoadeddataHanlder() {\r\n    console.log(\"loadeddata\", `video.videoWidth = ${video.videoWidth}`, `video.videoHeight = ${video.videoHeight}`);\r\n\r\n}\r\nfunction onLoadedmetadataHanlder() {\r\n    console.log(\"loadedmetadata\", `video.videoWidth = ${video.videoWidth}`, `video.videoHeight = ${video.videoHeight}`);\r\n\r\n}\r\nfunction onLoadstartHanlder() {\r\n    console.log(\"loadstart\", `video.videoWidth = ${video.videoWidth}`, `video.videoHeight = ${video.videoHeight}`);\r\n\r\n}\r\nfunction onPauseHanlder() {\r\n    console.log(\"pause\", `video.videoWidth = ${video.videoWidth}`, `video.videoHeight = ${video.videoHeight}`);\r\n    play.querySelector('path').setAttribute('d', \"M6,4l12,8L6,20V4z\");\r\n}\r\nfunction onPlayHanlder() {\r\n    console.log(\"play\", `video.videoWidth = ${video.videoWidth}`, `video.videoHeight = ${video.videoHeight}`);\r\n    // <path d=\"M9,19H7V5H9ZM17,5H15V19h2Z\"></path>\r\n    play.querySelector('path').setAttribute('d', \"M9,19H7V5H9ZM17,5H15V19h2Z\");\r\n}\r\nfunction onPlayingHanlder() {\r\n    console.log(\"playing\", `video.videoWidth = ${video.videoWidth}`, `video.videoHeight = ${video.videoHeight}`);\r\n\r\n}\r\nfunction onProgressHanlder() {\r\n\r\n\r\n    if (video.buffered && video.buffered.length) {\r\n        const ratio = video.buffered.end(0) / video.duration;\r\n        loaded.style.width = ratio * 100 + '%';\r\n    }\r\n}\r\nfunction onRatechangeHanlder() {\r\n    console.log(\"ratechange\", `video.videoWidth = ${video.videoWidth}`, `video.videoHeight = ${video.videoHeight}`);\r\n\r\n}\r\nfunction onResizeHanlder() {\r\n    console.log(\"resize \", `video.videoWidth = ${video.videoWidth}`, `video.videoHeight = ${video.videoHeight}`);\r\n\r\n}\r\nfunction onSeekedHanlder() {\r\n    console.log(\"seeked\", `video.videoWidth = ${video.videoWidth}`, `video.videoHeight = ${video.videoHeight}`);\r\n\r\n}\r\nfunction onSeekingHanlder() {\r\n    console.log(\"seeking\", `video.videoWidth = ${video.videoWidth}`, `video.videoHeight = ${video.videoHeight}`);\r\n\r\n}\r\nfunction onStalledHanlder() {\r\n    console.log(\"stalled\", `video.videoWidth = ${video.videoWidth}`, `video.videoHeight = ${video.videoHeight}`);\r\n\r\n}\r\nfunction onSuspendHanlder() {\r\n    console.log(\"suspend\", `video.videoWidth = ${video.videoWidth}`, `video.videoHeight = ${video.videoHeight}`);\r\n\r\n}\r\nfunction onTimeupdateHanlder() {\r\n    updateProgress();\r\n}\r\nfunction onVolumechangeHanlder() {\r\n    console.log(\"volumechange\", `video.videoWidth = ${video.videoWidth}`, `video.videoHeight = ${video.videoHeight}`);\r\n\r\n}\r\nfunction onWaitingHanlder() {\r\n    console.log(\"waiting\", `video.videoWidth = ${video.videoWidth}`, `video.videoHeight = ${video.videoHeight}`);\r\n\r\n}\r\n\r\nasync function onPlay(evt) {\r\n    evt.stopPropagation();\r\n    if (video.paused) {\r\n        await video.play();\r\n    } else {\r\n        await video.pause();\r\n    }\r\n    scheduleHidden();\r\n}\r\nfunction scheduleHidden() {\r\n    if (timer) {\r\n        clearTimeout(timer);\r\n    }\r\n    timer = setTimeout(() => {\r\n        middleWrapper.style.display = 'none';\r\n        bottomWrapper.style.display = 'none';\r\n        showing = false;\r\n    }, 5000);\r\n}\r\ndocument.body.addEventListener('click', evt => {\r\n    showing = true;\r\n    updateProgress();\r\n    middleWrapper.style.display = 'block';\r\n    bottomWrapper.style.display = 'block';\r\n    scheduleHidden();\r\n})\r\n\r\nfunction onProgress(evt) {\r\n    evt.stopPropagation();\r\n    if (video.duration) {\r\n        const proportion = evt.offsetX / progressRect.width;\r\n        video.currentTime = proportion * video.duration;\r\n    }\r\n}</script></body>\r\n\r\n</html>"